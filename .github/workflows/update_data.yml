name: update data
on: 
  workflow_dispatch:
## scheduled at 5:45 JST
  schedule:
    - cron: '45 20 * * *'

jobs:
  job1:
    name: web scraping
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      # - name: npm module install
      #   run: |
      #     npm install request
      #     npm install jsdom
      #     npm install fs
      #     npm install process
          

      # - name: Wiki scrape
      #   run: node scripts/fetch_song_list.js

      - name: intall lib
        run: |
          pip install pandas
          pip install lxml
          pip install html5lib
          pip install bs4

      - name: Wiki scrape
        run: python scripts/fetch_song_list.py    

      - name: Upload csv
        uses: actions/upload-artifact@v3
        with:
          name: songlist
          path: ./docs/fetched_song_data.csv

  job2:
    name: create image
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MY_TOKEN }}

      - name: Download csv
        uses: actions/download-artifact@v3
        with:
          name: songlist
          path: ./docs

      - name: Setup Python
        uses: actions/setup-python@v3

      - name: Other setups
        run: |
          sudo apt-get update
          sudo apt-get install fonts-ipaexfont
          pip install matplotlib
          # pip install pillow

      - name: "##### main run #####"
        run: |
          rm -f ./docs/figs/latest/*
          echo "script run for $(TZ=-9 date +"%Y/%m/01")"
          python ./scripts/difficulty_stats_calc.py $(TZ=-9 date +%Y/%m/01)
          echo
          echo
          
          echo "docs/figs folder: $(find ./docs/figs -maxdepth 1 -name "*.png" -type f -exec basename "{}" ";")"
          echo "docs/figs/latest folder: $(find ./docs/figs/latest -name "*.png" -exec basename "{}" ";")"
          echo
          echo
          
          if [[ ! $(find ./docs/figs -maxdepth 1 -name "*.png" -type f -exec basename "{}" ";") \
          =~ $(find ./docs/figs/latest -name "*.png" -exec basename "{}" ";") ]]; then
            echo "a new monthly file is added in fig folder" 
            mv ./docs/figs/latest/* ./docs/figs/
          fi
          
          rm -f ./docs/figs/latest/*
          
          echo "script run for $(TZ=JST-9 date +"%Y/%m/%d %H:%M:%S")"
          python ./scripts/difficulty_stats_calc.py $(TZ=JST-9 date +%Y/%m/%d)
      
      - name: "##### make_song_length.py #####"
        run: |
          python ./scripts/make_song_length.py
        
      - name: "##### make_song_level.py #####"
        run: |
          python ./scripts/make_song_level.py

      - name: Upload png(s)
        uses: actions/upload-artifact@v3
        with:
          name: fig_folder
          path: ./docs/figs
          
  job3:
    name: create html
    needs: job2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MY_TOKEN }}
          
      - name: Other setups
        run: |
          echo "##### before deletion #####"
          ls -Rla ./docs/figs
          git config --global user.name ${{ github.actor }}
          git config --global user.email ${{ secrets.MY_EMAIL }}
          
          find ./docs/figs/ -type f -delete
          
          echo
          echo
          echo "##### after deletion #####"
          ls -Rla ./docs/figs
          
      - name: Download figs
        uses: actions/download-artifact@v3
        with:
          name: fig_folder
          path: ./docs/figs
      
      - name: Delete data older than one year ago
        run: |
          echo "##### before deletion #####"
          ls -Rla ./docs/figs/
          echo
          echo

          rm -f ./docs/figs/$(($(TZ=-9 date +%Y) - 2))_*.png
          for data in `seq -f "%02g" $(($(TZ=-9 date +%m) - 1))`
          do
            find ./docs/figs/ -name $(($(TZ=-9 date +%Y) - 1))_${data}_*.png | xargs rm -f
          done
          
          echo "##### after deletion #####"
          ls -Rla ./docs/figs/          
      
      - name: Push docs (if needed)
        run: |
          git add ./docs/. -A \
          && git diff --cached --exit-code \
          || (git add -A ./docs/. \
          && git commit -m "auto commit docs folder" \
          && git push)
          
      
